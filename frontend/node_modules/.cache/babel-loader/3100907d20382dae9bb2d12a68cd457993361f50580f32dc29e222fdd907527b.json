{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yihua\\\\IdeaProjects\\\\COMP353-MYVC-Portal\\\\frontend\\\\src\\\\components\\\\ResultPanel.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPanel = ({\n  result\n}) => {\n  if (!result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black text-white p-6 font-terminal\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 italic\",\n        children: \"Query results will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  }\n  if (!result.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black text-red-400 p-6 border-l border-white font-terminal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n  const rows = Array.isArray(result.data) && Array.isArray(result.data[0]) ? result.data[0] : result.data;\n\n  // Case 1: Not an array\n  if (!Array.isArray(rows)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black text-white p-6 border-l border-white font-terminal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2 text-green-300\",\n        children: \"Query Executed Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-black text-white text-sm p-4 border border-white rounded overflow-auto\",\n        children: JSON.stringify(rows, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Case 2: Empty array\n  if (rows.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-black text-white p-6 border-l border-white font-terminal\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-300\",\n        children: \"No results returned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Case 3: Array of rows, render as table\n  const columns = Object.keys(rows[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-black text-white p-6 overflow-auto border-l border-white font-terminal\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto w-full border border-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-white text-black\",\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 border border-black\",\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-gray-800\",\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2 border border-white text-sm\",\n            children: String(row[col])\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultPanel;\nexport default ResultPanel;\nvar _c;\n$RefreshReg$(_c, \"ResultPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultPanel","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","success","error","rows","Array","isArray","data","JSON","stringify","length","columns","Object","keys","map","col","row","rowIndex","String","_c","$RefreshReg$"],"sources":["C:/Users/yihua/IdeaProjects/COMP353-MYVC-Portal/frontend/src/components/ResultPanel.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst ResultPanel = ({ result }) => {\r\n    if (!result) {\r\n        return (\r\n            <div className=\"w-full bg-black text-white p-6 font-terminal\">\r\n                <p className=\"text-gray-400 italic\">Query results will appear here...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!result.success) {\r\n        return (\r\n            <div className=\"w-full bg-black text-red-400 p-6 border-l border-white font-terminal\">\r\n                <h2 className=\"text-lg font-bold mb-2\">Error</h2>\r\n                <p>{result.error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const rows = Array.isArray(result.data) && Array.isArray(result.data[0])\r\n        ? result.data[0]\r\n        : result.data;\r\n\r\n\r\n    // Case 1: Not an array\r\n    if (!Array.isArray(rows)) {\r\n        return (\r\n            <div className=\"w-full bg-black text-white p-6 border-l border-white font-terminal\">\r\n                <h2 className=\"text-lg font-bold mb-2 text-green-300\">Query Executed Successfully</h2>\r\n                <pre className=\"bg-black text-white text-sm p-4 border border-white rounded overflow-auto\">\r\n                    {JSON.stringify(rows, null, 2)}\r\n                </pre>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Case 2: Empty array\r\n    if (rows.length === 0) {\r\n        return (\r\n            <div className=\"w-full bg-black text-white p-6 border-l border-white font-terminal\">\r\n                <p className=\"text-yellow-300\">No results returned.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Case 3: Array of rows, render as table\r\n    const columns = Object.keys(rows[0]);\r\n\r\n    return (\r\n        <div className=\"w-full bg-black text-white p-6 overflow-auto border-l border-white font-terminal\">\r\n            <table className=\"table-auto w-full border border-white\">\r\n                <thead>\r\n                <tr className=\"bg-white text-black\">\r\n                    {columns.map((col) => (\r\n                        <th key={col} className=\"px-4 py-2 border border-black\">\r\n                            {col}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {rows.map((row, rowIndex) => (\r\n                    <tr key={rowIndex} className=\"hover:bg-gray-800\">\r\n                        {columns.map((col) => (\r\n                            <td key={col} className=\"px-4 py-2 border border-white text-sm\">\r\n                                {String(row[col])}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}